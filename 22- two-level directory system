#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#define MAX_USERS 10
#define MAX_FILES_PER_USER 10
#define MAX_FILENAME_LENGTH 20
typedef struct 
{
    char name[MAX_FILENAME_LENGTH];
} 
file_t;
typedef struct 
{
    char name[MAX_FILENAME_LENGTH];
    file_t files[MAX_FILES_PER_USER];
    int num_files;
} 
user_t;
typedef struct 
{
    user_t users[MAX_USERS];
    int num_users;
} 
directory_t;
void create_file(user_t *user, const char *filename) 
{
    if (user->num_files >= MAX_FILES_PER_USER) 
    {
        printf("Error: maximum number of files reached for user %s\n", user->name);
        return;
    }
    strncpy(user->files[user->num_files].name, filename, MAX_FILENAME_LENGTH - 1);
    user->num_files++;
    printf("Created file %s for user %s\n", filename, user->name);
}
void create_user(directory_t *directory, const char *username) 
{
    if (directory->num_users >= MAX_USERS) 
    {
        printf("Error: maximum number of users reached\n");
        return;
    }
    strncpy(directory->users[directory->num_users].name, username, MAX_FILENAME_LENGTH - 1);
    directory->users[directory->num_users].num_files = 0;
    directory->num_users++;
    printf("Created user %s\n", username);
}
int main() 
{
    directory_t directory = {0};
    create_user(&directory, "user1");
    create_user(&directory, "user2");
    create_user(&directory, "user3");
    create_file(&directory.users[0], "file1.txt");
    create_file(&directory.users[0], "file2.txt");
    create_file(&directory.users[0], "file3.txt");
    create_file(&directory.users[1], "file4.txt");
    create_file(&directory.users[1], "file5.txt");
    create_file(&directory.users[2], "file6.txt");
    printf("Directory contents:\n");
    for (int i = 0; i < directory.num_users; i++) 
    {
        printf("User %s:\n", directory.users[i].name);
        for (int j = 0; j < directory.users[i].num_files; j++) 
        {
            printf("  %s\n", directory.users[i].files[j].name);
        }
    }
    return 0;
}
