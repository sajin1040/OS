#include <stdio.h>
#include <stdint.h>
#include <inttypes.h>
#define BLOCK_SIZE 8192
#define POINTER_SIZE 4
#define DIRECT_BLOCKS 12
uint64_t max_file_size(void)
{
uint64_t max_size = 0;
max_size += DIRECT_BLOCKS * BLOCK_SIZE;
uint64_t single_ptrs_per_block = BLOCK_SIZE / POINTER_SIZE;
uint64_t single_blocks = single_ptrs_per_block;
while (single_blocks < BLOCK_SIZE) {
max_size += BLOCK_SIZE;
single_blocks *= single_ptrs_per_block;
}
uint64_t double_ptrs_per_block = BLOCK_SIZE / POINTER_SIZE;
uint64_t double_blocks = single_ptrs_per_block;
while (double_blocks < BLOCK_SIZE) {
max_size += BLOCK_SIZE * single_ptrs_per_block;
double_blocks *= double_ptrs_per_block;
}
uint64_t triple_ptrs_per_block = BLOCK_SIZE / POINTER_SIZE;
uint64_t triple_blocks = double_ptrs_per_block;
while (triple_blocks < BLOCK_SIZE) {
max_size += BLOCK_SIZE * double_ptrs_per_block;
triple_blocks *= triple_ptrs_per_block;
}
return max_size;
}
int main(void)
{
uint64_t max_size = max_file_size();
printf("The maximum size of a file that can be stored in this file system is %" PRIu64 " bytes.\n", max_size);
return 0;
}
